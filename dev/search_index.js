var documenterSearchIndex = {"docs":
[{"location":"#IgaBase","page":"Home","title":"IgaBase","text":"","category":"section"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#IgaBase.boundary-Tuple{Any, Int64, Int64}","page":"Home","title":"IgaBase.boundary","text":"boundary(s; direction=1, component=1)\nâˆ‚(s; direction=1, component=1)\n\nReturn boundary component in direction of the object s.\n\n\n\n\n\n","category":"method"},{"location":"#IgaBase.custom_replace_ref_begin_end!-Tuple{Any}","page":"Home","title":"IgaBase.custom_replace_ref_begin_end!","text":"replace_ref_begin_end!(ex)\n\nRecursively replace occurrences of the symbols :begin and :end in a \"ref\" expression (i.e. A[...]) ex with the appropriate function calls (firstindex or lastindex). Replacement uses the closest enclosing ref, so     A[B[end]] should transform to     A[B[lastindex(B)]]\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.nullspace-Union{Tuple{AbstractMatrix{T}}, Tuple{T}} where T<:Real","page":"Home","title":"LinearAlgebra.nullspace","text":"nullspace(A::AbstractMatrix{T<:Real})\n\nConstruct a left basis for the null space of matrix A.\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.nullspace-Union{Tuple{SparseArrays.SparseVector{T}}, Tuple{T}} where T<:Real","page":"Home","title":"LinearAlgebra.nullspace","text":"nullspace(a::AbstractVector{T}) where {T<:Real}\n\nFind a sparse basis for the null space of a vector. The entries are computed such that null space operator is maximally sparse and column sum of absolute values equals 1.0 for improved conditioning.\n\n\n\n\n\n","category":"method"},{"location":"#IgaBase.AbstractMapping","page":"Home","title":"IgaBase.AbstractMapping","text":"AbstractMapping{Dim,S1,S2}\n\nAbstract type representing a mapping with an Dim dimensional domain, taking values in an S1 x S2 codimensional space.\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.AbstractSpline","page":"Home","title":"IgaBase.AbstractSpline","text":"AbstractSpline{Dim} <: ScalarMapping{Dim}\n\nAbstract subtype of ScalarMapping that represents a AbstractSpline function.\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.Boundary","page":"Home","title":"IgaBase.Boundary","text":"Boundary{S<:AbstractMapping}\n\nIterator over the boundary components of a mapping of type S.\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.Degree","page":"Home","title":"IgaBase.Degree","text":"Degree\n\nPolynomial degree (typeallias of Integer).\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.Dimension","page":"Home","title":"IgaBase.Dimension","text":"Dimension\n\nDimension (typeallias of Integer).\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.Regularity","page":"Home","title":"IgaBase.Regularity","text":"Regularity\n\nRegularity of the B-spline basis (typeallias of Integer).\n\n\n\n\n\n","category":"type"},{"location":"#IgaBase.ScalarMapping","page":"Home","title":"IgaBase.ScalarMapping","text":"ScalarMapping{Dim} <: AbstractMapping{Dim,1,1}\n\nAbstract subtype of AbstractMapping` that represents scalar-valued mappings.\n\n\n\n\n\n","category":"type"}]
}
